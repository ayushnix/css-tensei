/* css-tensei: main.css
 * SPDX-License-Identifier: NCSA */

:root {
  /* this font stack respects user choice and uses the fonts set in the web
   * browser settings
   *
   * if a "sensible" default is preferable, the following font stack values may
   * be used
   * --sans-font: -apple-system, BlinkMacSystemFont, "Segoe UI", Inter, sans-serif;
   * --mono-font: Menlo, "Cascadia Mono", Consolas, "SF Mono", monospace;
   * --serif-font: Baskerville, "Cambria", "Source Serif Pro", serif; */
  --sans-font: sans-serif;
  --mono-font: monospace, monospace;
  --serif-font: serif;

  /* increase body text line-height to account for increased padding in some
   * inline elements such as <kbd>
   * reduce line-height of headings to account for their increased font size */
  --height-text: 1.6;
  --height-head: 1.2;
  --height-text-print: 1.3;
  --height-head-print: 1.1;

  /* start increasing the base font size of 16px (1rem) from a 390px width
   * viewport to a maximum of 18px (1.125rem) ending at 1024px width viewport
   *
   * this has been done to account for the difference in viewing distance
   * between a touch device and a monitor display. although 18px on touch
   * devices is fine, we can get a more characters and words on a single line
   * on touch devices if we scale back to 16px, which is still an acceptable
   * font size.
   *
   * using the clamp function saves us from defining multiple media query
   * breakpoints */
  --base-font-size: clamp(1rem, calc(0.923rem + 0.315vw), 1.125rem);

  /* redefine heading font sizes to make <h5> useful
   * avoid using <h6> unless it's suitable for a specific task */
  --h1-size: 2.074rem;
  --h2-size: 1.728rem;
  --h3-size: 1.44rem;
  --h4-size: 1.2rem;
  --h5-size: 1rem;
  --h6-size: 0.833rem;

  /* reduce the browser default inline margin of elements such as <dd>, <ol>,
   * and <ul> on mobile to make room for more characters on a line and
   * gradually increase the margin to the browser default on desktop sized
   * viewports */
  --first-level-space: clamp(1.5rem, calc(1.16rem + 1.7vw), 2.25rem);
  --second-level-space: clamp(1rem, calc(0.69rem + 1.56vw), 1.69rem);

  /* the colors have been carefully chosen to try and avoid issues like halation
   * in dark mode, account for color blindness, and phenomenon like the
   * Helmholtzâ€“Kohlrausch effect which APCA doesn't seem to account for as on
   * June 2022. this can be observed using the Lc values of 85 for #dfdfb0 and
   * 85.6 for #f1e00a on the background color #100f10. in addition, subtle
   * layout shift issues due to sub-pixel anti-aliasing or monitor LED
   * arrangement has also been avoided by not making significant jumps in hue
   * when clicking on links. the colors are also perceptually uniform in the
   * CIELAB color space.
   *
   * the default light and dark theme try to have Lc >=90 for body text, Lc
   * >=90 for headings text, and Lc 40 for borders
   * if a lower contrast theme is selected, Lc is >=80 for body text, Lc >=75
   * for headings, and Lc >=30 for borders */
  --bg-main: #f8f8f8; /* white */
  --fg-text: #282828; /* black, Lc 97.4 */
  --fg-head: #3f3f3f; /* black, Lc 90.3, reduce contrast of headings to prevent halation */
  --bg-mark: #fff29a; /* yellow */
  --fg-mark: #282828; /* black, Lc 92.7 */
  --fg-border: #aaa; /* grey, Lc 41.6 */
  --fg-link: #0000e6; /* blue, Lc 85, lesser contrast but higher luminosity due to HK effect */
  --fg-link-underline: #0000c080; /* reduce opacity for underlines to improve readability */
  --fg-link-visited: #003397; /* dark blue, Lc 90.1, higher contrast but less luminous than fg-link */
  --fg-link-visited-underline: #00339780; /* reduce opacity for underlines to improve readability */
  --fg-ins: #114a1b; /* green, Lc 89.6 */
  --fg-del: #7d0800; /* red, Lc 89.3 */
  --bg-print: #fff;
  --fg-print: #000;
}

@media (prefers-color-scheme: light) and (prefers-contrast: less) {
  :root {
    --bg-main: #fbf3db; /* light yellow */
    --fg-text: #445559; /* grey, Lc 80 */
    --fg-head: #4e6166; /* grey, Lc 75.2 */
    --bg-mark: #f9fb71; /* yellow */
    --fg-mark: #445559; /* grey, Lc 80.6 */
    --fg-border: #94b5bf; /* light grey, Lc 35.9 */
    --fg-link: #005dab; /* blue, Lc 75.1 */
    --fg-link-underline: #005dab80;
    --fg-link-visited: #004578; /* dark blue, Lc 85.3 */
    --fg-link-visited-underline: #00457880;
    --fg-ins: #366900; /* green, Lc 75.3 */
    --fg-del: #ad2022; /* red, Lc 75.5 */
  }
}

@media (prefers-color-scheme: dark) {
  :root {
    --bg-main: #1c1d1d; /* black */
    --fg-text: #e6e6e6; /* white, Lc -90 */
    --fg-head: #d6d6d6; /* grey, Lc -80.1, reduce contrast of headings to prevent halation */
    --bg-mark: #7d3300; /* dark yellow */
    --fg-mark: #f9faf1; /* white, Lc -90.4 */
    --fg-border: #7a7a7a; /* grey, Lc -30.3, deliberately reduce contrast in dark mode */
    --fg-link: #f3e6ac; /* light yellow, Lc -89.7 */
    --fg-link-underline: #f3e6ac80;
    --fg-link-visited: #f1cb5a; /* dark yellow, Lc -75.8 */
    --fg-link-visited-underline: #f1cb5a80;
    --fg-ins: #c9ecff; /* blue, Lc -90.4 */
    --fg-del: #ffd0c8; /* light red, Lc -83 */
  }

  @media (prefers-contrast: less) {
    :root {
      --bg-main: #333;
      --fg-text: #ddd; /* Lc -80.2 */
      --fg-head: #d5d5d5; /* Lc -75.2 */
      --bg-mark: #80421a; /* dark yellow */
      --fg-mark: #eee; /* Lc -80.1 */
      --fg-border: #828285; /* Lc -30 */
      --fg-link: #f6d8b7; /* Lc -80 */
      --fg-link-underline: #f6d8b780;
      --fg-link-visited: #d1c39f; /* Lc -65 */
      --fg-link-visited-underline: #d1c39f80;
      --fg-ins: #b5e4ff; /* Lc -80.4 */
      --fg-del: #ffc8c2; /* Lc -75.2 */
    }
  }
}

/* RULES THAT ARE SPECIFIC TO SCREEN ONLY */
@media screen {
  /* switch to border-box instead of content-box to make box size, margins, and
   * padding more intuitive
   * the color-scheme property should ideally be defined in HTML but we'll
   * still define it here in case it isn't defined in HTML */
  html {
    box-sizing: border-box;
    color-scheme: light;
    font: var(--base-font-size) / var(--height-text) var(--sans-font);
    overflow-y: scroll;
  }

  /* if scrollbar-gutter is supported, use it instead of adding a permanent
   * visible scrollbar */
  @supports (scrollbar-gutter: stable both-edges) {
    html {
      overflow-y: auto;
      scrollbar-gutter: stable both-edges;
    }
  }

  /* input elements and other light theme elements should get default dark
   * colors in dark mode, also useful if we missed any elements that should've
   * been styled in dark mode but weren't */
  @media (prefers-color-scheme: dark) {
    html {
      color-scheme: dark;
    }
  }

  /* switch to serif fonts on HighDPI displays with a DPR of at least 2.5.
   * 2.5 was chosen (instead of 2) to avoid switching to serif fonts when
   * zooming in on a page upto 200% */
  /* stylelint-disable-next-line media-feature-name-no-vendor-prefix */
  @media (min-resolution: 2.5dppx), (-webkit-min-device-pixel-ratio: 2.5) {
    html {
      font-family: var(--serif-font);
    }
  }

  /* all elements should inherit the box-sizing property so that child elements
   * can easily inherit the box-sizing value of their parents if they differ
   * from the box-sizing set in html {} */
  *,
  *::before,
  *::after {
    box-sizing: inherit;
  }

  /* use `overflow-wrap: auto` instead of `hyphens: auto` on larger screens
   * which don't need automatic hyphenation
   * add a padding of 24px on either inline side to reserve space at the screen
   * edge; we've used pixels to avoid scaling the padding and reducing available
   * content width area */
  body {
    background-color: var(--bg-main);
    color: var(--fg-text);
    overflow-wrap: break-word;
    padding: 0 16px;
  }

  /* handheld touch devices with smaller screens should have automatic
   * hyphenation to justify paragraphs */
  @media (max-width: 48rem) {
    body {
      /* stylelint-disable-next-line property-no-vendor-prefix */
      -webkit-hyphens: auto;
      hyphens: auto;
    }
  }

  /* reduce inline padding on touch devices with a relatively small viewport to
   * make room for content */
  @media (max-width: 20rem) {
    body {
      padding: 0 8px;
    }
  }

  /* change color of headings to reduce halation possibilities */
  h1,
  h2,
  h3,
  h4 {
    color: var(--fg-head);
  }

  /* make superscripts and subscripts with hyperlink children easier to tap */
  :is(sub, sup) > a {
    padding: 0.5em;
  }

  /* the code snippet inside preformatted text does not obey padding-inline-end
   * if the code snippet overflows horizontally
   * although this issue can be fixed by making `pre > code` a block element,
   * it will mess up :focus-visible outline and keyboard navigation
   *
   * this issue isn't visible in Chromium but it is visible in Firefox and
   * WebKit browsers like Epiphany
   * https://bugzilla.mozilla.org/show_bug.cgi?id=1700858 */
  pre {
    border: 1px solid var(--fg-border);
    border-radius: 0.25rem;
    overflow-x: auto;
    padding: 0.5rem;
  }

  /* add borders and padding to inline monospace elements */
  :is(p, li, dd, dt) > :is(code, ins, del, samp, var) {
    border: 1px solid var(--fg-border);
    border-radius: 0.25rem;
    padding: 2px 0.25rem;
  }

  /* reduce the browser default inline padding for lists and nested lists */
  menu,
  ol,
  ul {
    padding-left: var(--first-level-space);
  }

  /* remove browser-default inline margin for <dd> and insert fluid padding */
  dd {
    margin: 0;
    padding-left: var(--first-level-space);
  }

  :is(menu, ol, ul) :is(menu, ol, ul) {
    padding-left: var(--second-level-space);
  }

  /* add padding to links inside <dt>
   * add negative margins, i.e., eat away the margins added to <dt> in case
   * <dt> has a hyperlink to avoid adding both margin and padding */
  dt > a {
    display: inline-block;
    margin: -0.75rem 0 -0.75rem -0.75rem;
    padding: 0.75rem;
  }

  /* consecutive <dt>'s shouldn't have padding for hyperlinks overlapping */
  dt + dt > a {
    padding-top: 0;
  }

  /* indicate that <summary> is a clickable element
   * we're assuming that <summary> will be an immediate child element of
   * <details> although this isn't strictly required */
  summary {
    cursor: pointer;
    padding: 0.75rem 0.5rem;
  }

  /* add a border around <details> when it's closed */
  details {
    border: 1px solid var(--fg-border);
    border-radius: 0.25rem;
  }

  /* when <details> is open, add a block border to <summary> */
  details[open] > summary {
    border-bottom: 1px solid var(--fg-border);
  }

  /* according to whatwg HTML spec, <details> can contain "flow content"
   * elements which includes many inline elements like <a> and <em>.
   * we'll account for a few commonly used block elements without an inherent
   * inline padding or margin and add inline padding to them */
  details[open] > :is(article, aside, div, figure, footer, header, nav, p, section) {
    padding-left: 0.5rem;
    padding-right: 0.5rem;
  }

  /* remove the unnecessary inline margin from figure */
  figure {
    margin-left: 0;
    margin-right: 0;
  }

  /* differentiate a figcaption from regular body text */
  figcaption {
    font-style: italic;
    text-align: center;
  }

  mark {
    background-color: var(--bg-mark);
    color: var(--fg-mark);
  }

  kbd {
    border: 2px outset var(--fg-border);
    padding: 2px 0.25rem;
  }

  /* <ins> shouldn't be mistaken for a hyperlink */
  ins {
    color: var(--fg-ins);
    font-style: italic;
    text-decoration: none;
  }

  /* <del> text shouldn't be mistaken for <s> */
  del {
    color: var(--fg-del);
  }

  /* compared to firefox, chromium's implementation of <hr> in light mode seems
   * broken; the line is a bit too thin */
  hr {
    color: var(--fg-border);
  }

  /* we're not applying styles to a {} because we don't want to style a {}
   * without href
   * the order of pseudo classes for hyperlinks should follow LVHA (:link,
   * :visited, :hover, and :active) order as specified on MDN
   * text-decoration shorthand hasn't been used deliberately because of its
   * messy support in web browsers */
  /* stylelint-disable declaration-block-no-redundant-longhand-properties */
  a:link {
    color: var(--fg-link);
    text-decoration-line: underline;
    text-decoration-color: var(--fg-link-underline);
    text-decoration-style: solid;
    text-decoration-thickness: 1px;
    text-underline-offset: 0.25em;
  }
  /* stylelint-enable declaration-block-no-redundant-longhand-properties */

  a:visited {
    color: var(--fg-link-visited);
    text-decoration-color: var(--fg-link-visited-underline);
  }

  /* there's little point styling a:hover because it won't be visible on touch
   * devices and there's already mouse pointer to hover with on a desktop */
  a:active {
    color: var(--fg-link-visited);
    text-decoration-color: var(--fg-link-visited);
  }

  /* hyperlinks, preformatted text blocks, and summary element in <details>
   * should get focus when performing keyboard navigation (they'll be
   * overwritten later with :focus-visible if applicable)
   *
   * ideally, pre[tabindex] should've been styled instead of pre but I don't
   * think static site generators generate pre[tabindex] when writing text in
   * markup languages. in addition, firefox behaves much better than chromium
   * in cases where text overflows horizontally in a preformatted text block.
   * firefox allows focusing on pre and scrolling on it using keyboard
   * navigation but chromium doesn't unless `tabindex=0` attribute is specified
   * in <pre>
   *
   * audio and video elements should focus regardless of mouse or keyboard
   * navigation */
  :is(a, audio, pre, summary, video):focus {
    border-radius: 0.25rem;
    outline: solid 3px;
  }

  /* this is needed to prevent summary from getting a border radius at the
   * bottom left and bottom right when <details> is [open] */
  :is(details[open] > summary):focus {
    border-radius: 0.25rem 0.25rem 0 0;
    outline: solid 3px;
  }

  /* if a browser supports :focus-visible (most mainstream browsers should),
   * use it instead of :focus
   *
   * the difference between :focus and :focus-visible, as far I understand it,
   * is that :focus will show outlines when using both mouse and keyboard and
   * :focus-visible will show outlines only when using keyboard navigation.
   * :focus-visible may make sense on some elements like hyperlinks and
   * horizontally overflowing preformatted code blocks but some elements, like
   * input fields, audio and video elements, should always show an outline,
   * regardless of the usage of mouse or keyboard */
  @supports selector(:focus-visible) {
    :is(a, pre, summary):focus:not(:focus-visible) {
      outline: none;
    }
  }
}

/* RULES THAT ARE COMMON TO BOTH SCREEN AND PRINT */

/* manually apply monospace font stack to prevent some browsers from reducing
 * the size of monospace HTML tags
 *
 * the address and time tag has been given a monospace font to eliminate
 * mistakes due to ambiguous characters like O, 0, 1, l, I */
address,
code,
kbd,
pre,
samp,
time,
var {
  font-family: var(--mono-font);
}

/* if font-weight of 600 isn't available, a higher font weight (most likely
 * bold) should automatically be selected
 * to maintain visual consistency, add equivalent margin to dt even if a
 * hyperlink isn't present */
dt {
  font-weight: 600;
  margin: 0.75rem;
}

/* OVERRIDES AND RULES THAT ARE SPECIFIC TO PRINT ONLY */
@media print {
  html {
    font: 100% / var(--height-text-print) var(--serif-font);
  }

  body {
    background-color: var(--bg-print);
    color: var(--fg-print);
  }

  a:link {
    color: var(--fg-print);
    text-decoration-line: underline;
    text-decoration-style: solid;
    text-decoration-thickness: 1px;
    text-underline-offset: 3px;
  }
}
